#TC: O(v+e)
class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        if not grid:
            return 0
        
        rows, cols = len(grid), len(grid[0])
        visit = set()
        num_islands = 0

        def bfs(r,c):
            que = collections.deque()
            visit.add((r,c))
            que.append((r,c))
            while que:
                row, col = que.popleft()
                dir = [[1,0], [-1,0], [0,1], [0,-1]]
                for dir_r, dir_c in dir:
                    r, c = row + dir_r, col + dir_c
                    if (r in range(rows) and
                        c in range(cols) and
                        grid[r][c] == "1" and
                        (r,c) not in visit):
                        que.append((r,c))
                        visit.add((r,c))

        for r in range(rows):
            for c in range(cols):
                if grid[r][c] == "1" and (r,c) not in visit:
                    bfs(r,c)
                    num_islands += 1
        return num_islands
