# TC/SC: O(n^2)/O(n)

class Solution:
    def wordBreak(self, s: str, wordDict: List[str]) -> bool:
        wordSet = set(wordDict)
        dp = [False] * (len(s)+1)
        dp[0] = True
        # Two pointers
        for i in range(1, len(s)+1):
            for j in range(i):
                if dp[j] and s[j:i] in wordSet:
                    dp[i] = True
                    break
        return dp[len(s)]
        
#         def recur(s, wordDict, start):
#             if start == len(s):
#                 return True
#             for end in range(start+1, len(s) + 1):
#                 if s[start:end] in wordDict and recur(s, wordDict, end):
#                     return True
#             return False
#         return recur(s, wordDict,0)
        
