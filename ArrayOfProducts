# Time complexity : O(n^2)
def arrayOfProducts(array):
	prodList = [1 for _ in range(len(array))]
	for i in range(len(array)):
		p = 1
		for j in range(len(array)):
			if i != j:
				p *= array[j]
		prodList[i] = p
	return prodList
  
  # Time complexity and space complexity: O(n)
def arrayOfProducts(array):
	prodList = [1 for _ in range(len(array))]
	leftProd = 1
	rightProd = 1
	
	for i in range(len(array)):
		prodList[i] = leftProd
		leftProd *= array[i]
	for i in reversed(range(len(array))):
		prodList[i] *= rightProd
		rightProd *= array[i]
	return prodList
