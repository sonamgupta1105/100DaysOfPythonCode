Time complexity: O(nlogn)
def twoNumberSum(array, targetSum):
	array.sort()# Sort the array
	#using two-pointer approach
	left_ptr, right_ptr = 0, len(array) - 1
	while left_ptr < right_ptr:
		currSum = array[left_ptr] + array[right_ptr]
		if currSum == targetSum:
			return [array[left_ptr], array[right_ptr]]
		elif currSum < targetSum:
			left_ptr += 1
		elif currSum > targetSum:
			right_ptr -= 1
	return []
	
 Time complexity: O(n^2)
 def twoNumberSum(array, targetSum):
    for i in range(len(array)-1):
		firstN = array[i]
		for j in range(i+1, len(array)):
			secondN = array[j]
			if firstN + secondN == targetSum:
				return [firstN, secondN]
	return []
